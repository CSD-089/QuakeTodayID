// Generated by Dagger (https://dagger.dev).
package com.example.quaketodayid.ui.main.dashboard.terbaru;

import com.example.quaketodayid.worker.NotificationPreference;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TerbaruFragment_MembersInjector implements MembersInjector<TerbaruFragment> {
  private final Provider<NotificationPreference> notificationPreferenceProvider;

  public TerbaruFragment_MembersInjector(
      Provider<NotificationPreference> notificationPreferenceProvider) {
    this.notificationPreferenceProvider = notificationPreferenceProvider;
  }

  public static MembersInjector<TerbaruFragment> create(
      Provider<NotificationPreference> notificationPreferenceProvider) {
    return new TerbaruFragment_MembersInjector(notificationPreferenceProvider);
  }

  @Override
  public void injectMembers(TerbaruFragment instance) {
    injectNotificationPreference(instance, notificationPreferenceProvider.get());
  }

  @InjectedFieldSignature("com.example.quaketodayid.ui.main.dashboard.terbaru.TerbaruFragment.notificationPreference")
  public static void injectNotificationPreference(TerbaruFragment instance,
      NotificationPreference notificationPreference) {
    instance.notificationPreference = notificationPreference;
  }
}
