// Generated by Dagger (https://dagger.dev).
package com.example.quaketodayid.di;

import com.example.quaketodayid.data.network.ApiService;
import com.example.quaketodayid.data.network.NetworkRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideNetworkRepositoryFactory implements Factory<NetworkRepository> {
  private final Provider<ApiService> apiServiceProvider;

  public RepositoryModule_ProvideNetworkRepositoryFactory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public NetworkRepository get() {
    return provideNetworkRepository(apiServiceProvider.get());
  }

  public static RepositoryModule_ProvideNetworkRepositoryFactory create(
      Provider<ApiService> apiServiceProvider) {
    return new RepositoryModule_ProvideNetworkRepositoryFactory(apiServiceProvider);
  }

  public static NetworkRepository provideNetworkRepository(ApiService apiService) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideNetworkRepository(apiService));
  }
}
