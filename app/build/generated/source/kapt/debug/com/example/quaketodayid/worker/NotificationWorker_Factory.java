// Generated by Dagger (https://dagger.dev).
package com.example.quaketodayid.worker;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.example.quaketodayid.data.network.NetworkRepository;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationWorker_Factory {
  private final Provider<NetworkRepository> networkRepositoryProvider;

  private final Provider<NotificationPreference> notificationPreferenceProvider;

  public NotificationWorker_Factory(Provider<NetworkRepository> networkRepositoryProvider,
      Provider<NotificationPreference> notificationPreferenceProvider) {
    this.networkRepositoryProvider = networkRepositoryProvider;
    this.notificationPreferenceProvider = notificationPreferenceProvider;
  }

  public NotificationWorker get(Context context, WorkerParameters params) {
    return newInstance(context, params, networkRepositoryProvider.get(), notificationPreferenceProvider.get());
  }

  public static NotificationWorker_Factory create(
      Provider<NetworkRepository> networkRepositoryProvider,
      Provider<NotificationPreference> notificationPreferenceProvider) {
    return new NotificationWorker_Factory(networkRepositoryProvider, notificationPreferenceProvider);
  }

  public static NotificationWorker newInstance(Context context, WorkerParameters params,
      NetworkRepository networkRepository, NotificationPreference notificationPreference) {
    return new NotificationWorker(context, params, networkRepository, notificationPreference);
  }
}
