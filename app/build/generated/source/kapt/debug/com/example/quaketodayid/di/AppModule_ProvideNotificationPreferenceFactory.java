// Generated by Dagger (https://dagger.dev).
package com.example.quaketodayid.di;

import android.content.Context;
import com.example.quaketodayid.worker.NotificationPreference;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideNotificationPreferenceFactory implements Factory<NotificationPreference> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvideNotificationPreferenceFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public NotificationPreference get() {
    return provideNotificationPreference(contextProvider.get());
  }

  public static AppModule_ProvideNotificationPreferenceFactory create(
      Provider<Context> contextProvider) {
    return new AppModule_ProvideNotificationPreferenceFactory(contextProvider);
  }

  public static NotificationPreference provideNotificationPreference(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideNotificationPreference(context));
  }
}
